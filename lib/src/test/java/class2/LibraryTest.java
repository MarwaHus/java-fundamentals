/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package class2;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;


class LibraryTest {
    Library sut = new Library();
    @Test void roll() {
        int result = sut.roll(4).length;
        Assertions.assertEquals(4,result);

    }

    @Test
    void duplicates() {
        boolean result = sut.containsduplicates(new int[]{1, 2, 3, 2, 5});
        Assertions.assertEquals(true, result);

    }
    @Test
    void testCalculateAverage() {
        int[] arr = {1, 2, 3, 4, 5};
        double result = sut.calculateAverage(arr);
        Assertions.assertEquals(3.0, result, 0.0001);
    }
    @Test
    void testGetLowestAverageArray() {
        int[][] arr = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };

        int[] expected = { 55, 54, 60, 53, 59, 57, 61 };
        int[] result = sut.getLowestAverageArray(arr);
        Assertions.assertArrayEquals(expected, result);
    }

    @Test
    void testAnalyze() {
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        String expectedResults = "High: 72\nLow: 51\nNever saw temperature: 63\nNever saw temperature: 67\nNever saw temperature: 68\nNever saw temperature: 69\n";
        String actualResults = sut.analyze(weeklyMonthTemperatures);
        assertEquals(expectedResults, actualResults);
    }
    @Test
    void testTally() {
        List<String> votes = new ArrayList<>(Arrays.asList("Alice", "Bob", "Charlie", "Alice", "Bob", "Alice"));
        String expectedWinner = "Alice";
        String actualWinner = sut.tally(votes);
        assertEquals(expectedWinner, actualWinner);

    }

}
